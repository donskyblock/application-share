name: Build and Push Docker Image

on:
  push:
    branches: [ master, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: donskyblock/application-share

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.basic
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.meta.outputs.digest }}
        subject-digest: ${{ steps.meta.outputs.digest }}
        push-to-registry: true

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  test-image:
    runs-on: ubuntu-latest
    needs: build-and-push
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Test Docker image
      run: |
        # Pull the image
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
        # Test basic functionality
        docker run --rm -d --name test-app \
          -p 3000:3000 \
          -e ADMIN_PASSWORD=testpass123 \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
        # Wait for container to start
        sleep 30
        
        # Test if the application is responding
        curl -f http://localhost:3000/health || exit 1
        
        # Clean up
        docker stop test-app

  deploy-docs:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Update documentation with Docker info
      run: |
        # Update README with Docker pull command
        cat >> README.md << 'EOF'
        
        ## 🐳 Docker Hub
        
        Pull the latest image:
        ```bash
        docker pull ghcr.io/donskyblock/application-share:latest
        ```
        
        Run with Docker Compose:
        ```bash
        docker-compose up -d
        ```
        
        Available tags:
        - `latest` - Latest stable release
        - `v1.0.0` - Specific version
        - `main` - Latest from main branch
        EOF

    - name: Commit and push documentation updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "docs: Add Docker Hub information" || exit 0
        git push
